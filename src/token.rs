#[derive(Debug, PartialEq, Clone)]
pub struct SourceLocation {
  pub line: usize,
  pub column: usize,
}

#[derive(Debug, Eq, Hash, PartialEq, Clone)]
pub enum Token {
  LeftParen,
  RightParen,
  LeftBrace,
  RightBrace,
  Comma,
  Dot,
  Minus,
  Plus,
  Semicolon,
  Slash,
  Star,
  Bang,
  BangEqual,
  Equal,
  EqualEqual,
  GreaterThan,
  GreaterThanOrEqual,
  LessThan,
  LessThanOrEqual,
  NotEqual,
  Assign,
  LeftBracket,
  RightBracket,
  Identifier(String),
  String(String),
  Number(String),
  And,
  Class,
  Else,
  False,
  For,
  Function,
  If,
  Nil,
  Or,
  Print,
  Return,
  Super,
  This,
  True,
  Let,
  While,
  Illegal(char),
  Eof,
}

pub fn lookup_identifier(lexeme: String) -> Token {
  match lexeme.as_str() {
    "let" => Token::Let,
    "fn" => Token::Function,
    "return" => Token::Return,
    "true" => Token::True,
    "false" => Token::False,
    "if" => Token::If,
    "else" => Token::Else,
    "nil" => Token::Nil,
    "print" => Token::Print,
    _ => Token::Identifier(lexeme),
  }
}
